
A.
(x<y) == (-x>-y)
Not always true(donâ€™t yield 1). For this signed x and y
when x or -x = INT_MIN, the value could be 0

B.
((x+y)<<4) + y -x == 17* y + 15 + x
is always true i.e always yield 1.

left shift with 4 ==> 2*2*2*2 ==>16, now LHS
((x+y)* 16) + y -x ==> 16x + 16y + y -x
17y + 16x

C.
always true i.e yield 1
~x + ~y+ 1 == ~(x+y)
~x == -1 -x same for ~y as well and ~(x +y) = -(x + y) -1

-1 -x -1 -y + 1 = -x -y -1
-x -y -1 = -x -y -1 (LHS == RHS)

D.
(ux-uy) == -(unsigned) (y-x)

always true i.e yield 1

LHS u(x -y)==> -(unsigned) (y -x ) == RHS

E.
((x >> 2) << 2) <= x
always true i.e yield 1

(x/2*2 ) * 2*2 ==> x <= x
So, LHS is always less than or equal to RHS

F.
x >> 1 == (ux >> 1) + (ux & (-1 << 31))
always true, i.e can yield 1
tried using -ve and +ve number, got equal on the both side.

G.
x % 128 == (x & 127)
x % 128 is always between 0 <-> 127 range

always true, i.e can yield 1
says x = 3, -3
then,
LHS == RHS













